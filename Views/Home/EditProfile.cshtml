@model WheelsOnDeals.Models.USER_INFO

@{
    ViewBag.Title = "EditProfile";
}

<h2>Edit Profile</h2>

<div class="bg-light container p-5 rounded-3 shadow-md">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h5 class="display-5 text-primary">@Model.USER_FNAME @Model.USER_LNAME</h5>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.USER_IDN, new { Value = Convert.ToInt32(Session["Session_UserId"]) })
                    @Html.ValidationMessageFor(model => model.USER_IDN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.USER_EMAIL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.USER_EMAIL, new { htmlAttributes = new { @class = "form-control w-25" } })
                    @Html.ValidationMessageFor(model => model.USER_EMAIL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.USER_FNAME, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.USER_FNAME, new { htmlAttributes = new { @class = "form-control w-25" } })
                    @Html.ValidationMessageFor(model => model.USER_FNAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.USER_LNAME, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.USER_LNAME, new { htmlAttributes = new { @class = "form-control w-25" } })
                    @Html.ValidationMessageFor(model => model.USER_LNAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.USER_PASSWORD, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.USER_PASSWORD, new { htmlAttributes = new { @class = "form-control w-25" } })
                    @Html.ValidationMessageFor(model => model.USER_PASSWORD, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control w-25" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mt-3">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-outline-success" onclick="confirm('Save changes to profile?')" />
                </div>
            </div>
        </div>
    }

    <div class="mt-3">
        @Html.ActionLink("Back", "MyProfile", new { id = Convert.ToInt32(Session["Session_UserId"]) })
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
